"""Change config table attributes

Revision ID: 3e71ead4a59a
Revises: 2221a471ed49
Create Date: 2022-10-23 18:45:47.520705

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3e71ead4a59a'
down_revision = '2221a471ed49'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('edge', 'label',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('edge', 'type_edge',
               existing_type=postgresql.ENUM('arrow', 'line', name='type_edge'),
               nullable=False)
    op.alter_column('edge', 'size',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('node', 'term',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('node', 'definition',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('node', 'size',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('node', 'color',
               existing_type=sa.VARCHAR(length=45),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('node', 'color',
               existing_type=sa.VARCHAR(length=45),
               nullable=True)
    op.alter_column('node', 'size',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('node', 'definition',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('node', 'term',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('edge', 'size',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('edge', 'type_edge',
               existing_type=postgresql.ENUM('arrow', 'line', name='type_edge'),
               nullable=True)
    op.alter_column('edge', 'label',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    # ### end Alembic commands ###
